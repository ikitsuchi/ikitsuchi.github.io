[{"content":"This post is the notes I took while learning CS 61A (Spring 2022).\nFunctions, Expressions, Values  Programs work by manipulating values, each value has a data type. Expressions in programs evaluate to values. Functions encapsulate a series of statements that maps arguments to a return value. A def statement creates a function object with certain parameters and a body and binds it to name in the current environment. A call expression creates a new frame in the environment, binds the function call\u0026rsquo;s arguments to the parameters in that frame, then executes the body of the function in the new frame.  Control  A side effect is when something happens as a result of calling a function besides just returning a value. Conditionals, booleans, iteration\u0026hellip;  Higher-Order Functions Designing functions  A pure function\u0026rsquo;s behavior is the relationship it creates between input and output. Give each funtion exactly one job, but make it apply to many related situations. Don\u0026rsquo;t Repeat Yourself (DRY): Implement a process just once, execute it many times.  Higher-order functions A higher-order function is a function that either:\n Takes another function as an argument Returns a function as its result  All other functions are considered first-order functions.\nLambda expressions A lambda expression is a simple function definition that evaluates to a function.\nThe syntax: lambda \u0026lt;parameters\u0026gt;: \u0026lt;expression\u0026gt;\nConditional expressions A conditional expression has the form:\n\u0026lt;consequent\u0026gt; if \u0026lt;predicate\u0026gt; else \u0026lt;alternative\u0026gt;\nEnvironments Multiple environments  Every expression is evaluated in the context of an environment. A name evaluates to the value bound to that name in the earlist frame of the current environment in which that name is found.  Environments for higher-order functions Functions are first class: Functions are treated as values in Python.\nEnvironments for nested def statements  Every user-defined function has a parent frame. The parent of a function is the frame in which it was defined. Every local frame has a parent frame. The parent of a frame is the parent of the called function.  Function currying Currying: Converting a function that takes multiple arguments into a single-argument higher-order function.\nHere is a function that currys any two-argument function:\ndef curry2(f):  def g(x):  def h(y):  return f(x, y)  return h  return g curry2 = lambda f: lambda x: lambda y: f(x, y) make_adder = curry2(add) make_adder(2)(3) ","permalink":"http://ikitsuchi.github.io/posts/cs61a/","summary":"\u003cp\u003eThis post is the notes I took while learning CS 61A (Spring 2022).\u003c/p\u003e","title":"UCB CS 61A Notes"},{"content":"Hello, this is ikitsu, an undergraduate student studying computer science at Huazhong University of Science and Technology (HUST) and currently a member of Unique Studio Lab and Heptagon HPC Team.\nI’m a self-motivated programmer just coding for interest and a freshman working hard to learn the basics of computer science. Confusing about whether to be an engineer or a researcher in the future, I still have a long way to go. I write blogs to take notes, summarize something and record my thoughts.\nIn addition to the codes, I’m a crazy enthusiast of ACG culture and Doujin music. And … an Okabe Rintarou waiting for his Makise Kurisu?\n","permalink":"http://ikitsuchi.github.io/about/","summary":"Hello, this is ikitsu, an undergraduate student studying computer science at Huazhong University of Science and Technology (HUST) and currently a member of Unique Studio Lab and Heptagon HPC Team.\nI’m a self-motivated programmer just coding for interest and a freshman working hard to learn the basics of computer science. Confusing about whether to be an engineer or a researcher in the future, I still have a long way to go.","title":"About"},{"content":"","permalink":"http://ikitsuchi.github.io/categories/","summary":"","title":"Categories"},{"content":"HUST  Honeta: https://honeta.site/ jyi2ya: https://www.cnblogs.com/jyi2ya/ Margatroid: https://mgt.moe/ vaaandark: https://vaaandark.top/ poorpool: https://yxchen.net/ Watari: https://watari.xyz/  Others  Amagiii: https://amagi.yukisaki.io/ Hakula: https://hakula.xyz/ kai586123: https://mainpage.baka.online/ Labelray: https://blog.labelray.top/ Milkice: https://milkice.me/  ","permalink":"http://ikitsuchi.github.io/friends/","summary":"HUST  Honeta: https://honeta.site/ jyi2ya: https://www.cnblogs.com/jyi2ya/ Margatroid: https://mgt.moe/ vaaandark: https://vaaandark.top/ poorpool: https://yxchen.net/ Watari: https://watari.xyz/  Others  Amagiii: https://amagi.yukisaki.io/ Hakula: https://hakula.xyz/ kai586123: https://mainpage.baka.online/ Labelray: https://blog.labelray.top/ Milkice: https://milkice.me/  ","title":"Friends"},{"content":"","permalink":"http://ikitsuchi.github.io/tags/","summary":"","title":"Tags"}]