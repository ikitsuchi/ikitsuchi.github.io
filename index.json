[{"content":"Course Static Program Analysis programming assignment @Nanjing University\nGitHub repository link\nOverview 为 Java 实现常量传播算法。实现一个通用的 worklist 求解器，并用它来解决一些数据流分析问题，例如本次的常量传播。\n相比于 A1 的小试牛刀，A2 就开始有些困难了，截止我通过时，OJ 上本题的通过率只有 16%，我交了 5 次才通过评测，令人感叹！\nImplementation 在开始写代码之前，我强烈建议先通读一遍所有用到的类中的方法及其注释，这真的很重要。我个人在完成过程中是按照先完成两个辅助方法 void meetValue(Value,Value) 和 Value evaluate(Exp,CPFact)，再完成其他有关分析的方法的顺序的。这里只记录一些我在完成过程中踩到过坑的方法。\nValue evaluate(Exp,CPFact) 在本题中，需要处理的表达式有以下几项：\nBinaryExp ArithmeticExp ConditionExp ShiftExp BitwiseExp IntLiteral Var 其他表达式可以无脑返回一个 NAC。可以使用 instanceof 分开 BinaryExp、IntLiteral 和 Var 三种情况，几种 BinaryExp 的处理方式都差不多，狂暴 switch 完成对应的计算即可。这个函数最需要注意的点在于，对于除以 0 的情况（出现在 / 和 % 中），我们规定结果为 UNDEF，这条规则的优先级应当是最高的。也就是说，即使是 NAC / 0，结果也应该是 UNDEF。我最初的代码逻辑是，只要两个 operant 中存在一个 NAC，结果就是 NAC，把这个规则放在了 ArithmeticExp 的 switch case 中，这样就错了。所以，应该在处理 ArithmeticExp 的最开始特判这种情况。\nCPFact newBoundaryFact(CFG) 边界值是将方法的参数的值全部设置为 NAC，我最开始写代码时看漏了这个，忘记写这个了，我觉得这实在是太愚蠢了！获取方法参数的 API 要在源码里好好找找，别用错了。而且在设置时也要注意，参数一定是 int 类型的吗？在本实验中，在设置变量的 Value 时，一定要时刻牢记，只处理 int。\nboolean transferNode(Stmt,CPFact,CPFact) 还是那个问题：语句的左值是变量吗？是 int 类型的变量吗？注意这点基本就不会出问题。使用 evaluate 方法计算右值，关注使用的方法的返回值，可以帮助你写出更优美的代码。\nWorkListSolver.doSolveForward(CFG,DataflowResult) 这个倒不是正确性上的问题。我最初实现时，为了体现当前语句的 IN 是所有 predecessor 的 OUT 的 meet，会先清空当前语句的 IN。但后来思考了一下，由于 transfer function 是单调的，这个清空毫无意义。=_=\n","permalink":"https://ikitsu.moe/posts/constant-propagation-and-worklist-solver/","summary":"\u003cp\u003eCourse Static Program Analysis programming assignment @Nanjing University\u003c/p\u003e","title":"Constant Propagation and Worklist Solver"},{"content":"Hello, I\u0026rsquo;m ikitsu, an undergraduate student studying computer science at Huazhong University of Science and Technology (HUST) and currently a member of Unique Studio Lab and Heptagon HPC Team.\nI’m a self-motivated programmer just coding for interest and a freshman working hard to learn the basics of computer science. Confusing about whether to be an engineer or a researcher in the future, I still have a long way to go. I write blogs to take notes, summarize something and record my thoughts.\nIn addition to the codes, I’m a crazy enthusiast of ACG culture and Doujin music, especially J-Trance music by producers like Nhato, Taishi and so on.\n","permalink":"https://ikitsu.moe/about/","summary":"Hello, I\u0026rsquo;m ikitsu, an undergraduate student studying computer science at Huazhong University of Science and Technology (HUST) and currently a member of Unique Studio Lab and Heptagon HPC Team.\nI’m a self-motivated programmer just coding for interest and a freshman working hard to learn the basics of computer science. Confusing about whether to be an engineer or a researcher in the future, I still have a long way to go. I write blogs to take notes, summarize something and record my thoughts.","title":"About"},{"content":"HUST Honeta: https://honeta.site/ jyi2ya: https://www.cnblogs.com/jyi2ya/ Margatroid: https://mgt.moe/ vaaandark: https://vaaandark.top/ poorpool: https://yxchen.net/ Watari: https://watari.xyz/ Others Amagiii: https://amagi.yukisaki.io/ Hakula: https://hakula.xyz/ kai586123: https://mainpage.baka.online/ Labelray: https://blog.labelray.top/ Milkice: https://milkice.me/ ","permalink":"https://ikitsu.moe/friends/","summary":"HUST Honeta: https://honeta.site/ jyi2ya: https://www.cnblogs.com/jyi2ya/ Margatroid: https://mgt.moe/ vaaandark: https://vaaandark.top/ poorpool: https://yxchen.net/ Watari: https://watari.xyz/ Others Amagiii: https://amagi.yukisaki.io/ Hakula: https://hakula.xyz/ kai586123: https://mainpage.baka.online/ Labelray: https://blog.labelray.top/ Milkice: https://milkice.me/ ","title":"Friends"}]